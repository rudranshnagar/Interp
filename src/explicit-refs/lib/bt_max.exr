
(* Max exercise *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in let maxVal = proc(x) { proc(y) { if (x>>y) then (x) else (y) }}
in letrec max_tree_helper (nd) = 
if number?(nd)
then 0
else ((maxVal ((maxVal (max_tree_helper nd.left)) (max_tree_helper nd.right))) nd.data)
in let max_bt = proc (t) { (max_tree_helper t.root) }
in (max_bt t1)