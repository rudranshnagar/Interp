
(* Find exercise  *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in letrec find_bt_helper(nd) = proc(val){
  if number?(nd)
  then zero?(1)
  else (
    if (nd.data = val)
    then zero?(0)
    else (
          if ((find_bt_helper nd.left) val)
          then zero?(0)
          else ((find_bt_helper nd.right) val)
          )
    )
}
in let find_bt = proc (t){proc (v){ ((find_bt_helper t.root) v) }}
in ((find_bt t1) 12)